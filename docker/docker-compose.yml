version: "3.8"

services:

  eureka-service:
    image: viktorsee0/eureka-service:latest
    container_name: eureka-service
    ports:
      - "8761:8761"
    networks:
      - specific-group-services

  todolist-service:
    image: viktorsee0/todolist-service:latest
    container_name: todolist-service
    ports:
      - "9092:9092"
    depends_on:
      - eureka-service
      - logstash
      - ms-database
    networks:
      - specific-group-services

  gateway-service:
    image: viktorsee0/gateway-service:latest
    container_name: gateway-service
    ports:
      - "8079:8079"
    depends_on:
      - eureka-service
      - authentication-service
    networks:
      - specific-group-services

  rating-service:
    image: viktorsee0/rating-service:latest
    container_name: rating-service
    ports:
      - "9093:9093"
    depends_on:
      - eureka-service
      - logstash
      - ms-database
    networks:
      - specific-group-services

  authentication-service:
    image: viktorsee0/authentication-service:latest
    container_name: authentication-service
    ports:
      - "9091:9091"
    depends_on:
      - eureka-service
      - logstash
      - keycloak
    networks:
      - specific-group-services

  scheduler-service:
    image: viktorsee0/scheduler-service:latest
    container_name: scheduler-service
    ports:
      - "9094:9094"
    depends_on:
      - eureka-service
      - logstash
      - ms-database
    networks:
      - specific-group-services

  keycloak-postgres:
    image: postgres:latest
    container_name: keycloak-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "5435:5432"
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - specific-group-services

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    environment:
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --db postgres
      - --hostname-strict-https false
      - --hostname-strict false
      - --proxy edge
      - --http-enabled true
      - --import-realm
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json
    ports:
      - "8080:8080"
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master" ]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    networks:
      - specific-group-services

  ms-database:
    image: postgres:latest
    container_name: ms-database
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "5436:5432"
    deploy:
      resources:
        limits:
          memory: 256M
    volumes:
      - ./ms-database:/docker-entrypoint-initdb.d
      - ./pgdata:/var/lib/postgresql
    networks:
      - specific-group-services

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - specific-group-services

  elasticsearch:
    image: elasticsearch:7.16.1
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./docker_volumes/elasticsearch/data:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      ELASTIC_USERNAME: "elastic"
      ELASTIC_PASSWORD: "changeme"
      discovery.type: single-node
    networks:
      - elk
      - specific-group-services
    ports:
      - "9200:9200"
      - "9300:9300"

  logstash:
    image: logstash:7.16.2
    volumes:
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipelines:/usr/share/logstash/config/pipelines:ro
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    ports:
      - "5044:5044"
      - "5001:5000"
      - "9600:9600"
    networks:
      - elk
      - specific-group-services
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.16.1
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elk
      - specific-group-services
    ports:
      - "5601:5601"

networks:
  specific-group-services:
    driver: bridge
  elk:
    driver: bridge

volumes:
  setup:
  elasticsearch: