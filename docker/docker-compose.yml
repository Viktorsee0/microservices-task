version: "3.8"

services:
  keycloak-postgres:
    image: postgres:latest
    container_name: keycloak-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - ${KC_POSTGRES_PORT_MAPPING:-5435}:5432
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - specific-group-services

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    environment:
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --auto-build
      - --db postgres
      - --hostname-strict-https false
      - --hostname-strict false
      - --proxy edge
      - --http-enabled true
      - --import-realm
    volumes:
      - ./configs/realm.json:/opt/keycloak/data/import/realm.json
    ports:
      - 8282:8080
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master" ]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    networks:
      - specific-group-services

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTIC_PASSWORD=password
    ports:
      - "9200:9200"
    networks:
      - specific-group-services

  logstash:
    container_name: logstash
    image: logstash:8.11.0
    volumes:
      - ./configs/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    ports:
      - "5000:5000"
    networks:
      - specific-group-services

  kibana:
    container_name: kibana
    image: kibana:8.11.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_SERVICE_ACCOUNT_TOKEN=eyJ2ZXIiOiI4LjExLjAiLCJhZHIiOlsiMTcyLjMwLjAuNDo5MjAwIl0sImZnciI6ImUyMDNlOTRjYjljOTg3MjhlZmZiNzIxMWM1NmM1NWE2OTZmMGZjOGJjMTBmMzk2ZWJmMGEzYmExNmVhMWNlMTIiLCJrZXkiOiJKMC02eUlzQlF5N0dHRTJEd3BxZTpWUDQ0UmJxQlF2T0VzVEdzRFdYVmpBIn0=
      - SERVER_NAME=kibana
    depends_on:
      - elasticsearch
    networks:
      - specific-group-services

#    bin/elasticsearch-create-enrollment-token -s kibana
networks:
  specific-group-services:
    driver: bridge


#  eureka:
#    build: eureka
#    container_name: eureka-service
#    ports:
#      - "8761:8761"
#    environment:
#      SERVER_PORT: "8761"
#
#  gateway:
#    build: gateway
#    container_name: gateway-service
#    ports:
#      - "8080:8080"
#    environment:
#      SERVER_PORT: "8080"
#    depends_on:
#      - eureka
#      - keycloak
