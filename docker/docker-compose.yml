version: "3.8"

services:

  eureka-service:
    image: viktorsee0/eureka-service:latest
    container_name: eureka-service
    ports:
      - "8761:8761"
    networks:
      - specific-group-services

  todolist-service:
    image: viktorsee0/todolist-service:latest
    container_name: todolist-service
    ports:
      - "9092:9092"
    depends_on:
      - eureka-service
      - logstash
      - ms-database
    networks:
      - specific-group-services

  gateway-service:
    image: viktorsee0/gateway-service:latest
    container_name: gateway-service
    ports:
      - "8079:8079"
    depends_on:
      - eureka-service
      - keycloak
    networks:
      - specific-group-services

  rating-service:
    image: viktorsee0/rating-service:latest
    container_name: rating-service
    ports:
      - "9093:9093"
    depends_on:
      - eureka-service
      - logstash
      - ms-database
    networks:
      - specific-group-services

  user-service:
    image: viktorsee0/user-service:latest
    container_name: user-service
    ports:
      - "9095:9095"
    depends_on:
      - eureka-service
      - logstash
      - ms-database
    networks:
      - specific-group-services

  scheduler-service:
    image: viktorsee0/scheduler-service:latest
    container_name: scheduler-service
    ports:
      - "9094:9094"
    depends_on:
      - eureka-service
      - logstash
      - ms-database
    networks:
      - specific-group-services

  keycloak-postgres:
    container_name: keycloak-postgres
    image: postgres:13.0-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    networks:
      - specific-group-services

  keycloak:
    container_name: keycloak
    image: bitnami/keycloak:18.0.2-debian-11-r9
    ports:
      - '8000:8000'
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_HTTP_PORT: 8000
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import
    depends_on:
      - keycloak-postgres
    networks:
      - specific-group-services

  ms-database:
    image: postgres:latest
    container_name: ms-database
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "5436:5432"
    deploy:
      resources:
        limits:
          memory: 256M
    volumes:
      - ./ms-database:/docker-entrypoint-initdb.d
      - ./pgdata:/var/lib/postgresql
    networks:
      - specific-group-services

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - specific-group-services

  setup:
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/helpers.sh:/helpers.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - specific-group-services
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - specific-group-services

  logstash:
    container_name: logstash
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - /mnt/c/temp/logs:/usr/share/logstash/logs
    ports:
      - "5044:5044"
      - "50000:50000/tcp"
      - "50000:50000/udp"
      - "9600:9600"
    environment:
      LOG_LEVEL: debug
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - specific-group-services
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - specific-group-services

    depends_on:
      - elasticsearch

networks:
  specific-group-services:
    driver: bridge

volumes:
  setup:
  elasticsearch: